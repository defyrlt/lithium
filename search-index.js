var searchIndex = {};
searchIndex['lithium'] = {"items":[[3,"Select","lithium","Represents `SELECT` query.",null,null],[3,"Insert","","Represents `INSERT` query.",null,null],[3,"Update","","Represents `UPDATE` query",null,null],[3,"Where","","Represents `WHERE` clause which is widely used in different queries.",null,null],[12,"operator","","Operator which will be used to join expressions",0,null],[0,"common","","Keeps stuff (mostly traits) that is used (or is going to be) across different queries.",null,null],[3,"Subquery","lithium::common","Struct that is used to keep result from `to_sql` of some query.\nIf you use `with_alias` - keep in mind that it's changing content of\n`query` in **irreversible** way.  \nWe do this because we need `&str` to have a nice\nway of using subqueries and avoid forcing users to use `String` when they don't\nreally need to.",null,null],[12,"query","","Keeps generated SQL",1,null],[8,"ToSQL","","",null,null],[10,"to_sql","","",2,{"inputs":[{"name":"tosql"}],"output":{"name":"string"}}],[8,"AsStr","","Is used to build up methods which can receive either `&str` or `&Subquery`\nin a convenient way. You can find examples in some of `Select`'s methods.",null,null],[10,"as_str","","",3,{"inputs":[{"name":"asstr"}],"output":{"name":"str"}}],[8,"Pusheable","","Is used to build up methods which can receive either `&str` or `&[&str; N]`\nin a convenient way. You can find examples in some of `Select`'s methods.",null,null],[10,"push_to","","",4,{"inputs":[{"name":"pusheable"},{"name":"vec"}],"output":null}],[11,"clone","","",1,{"inputs":[{"name":"subquery"}],"output":{"name":"subquery"}}],[11,"new","","",1,{"inputs":[{"name":"subquery"},{"name":"string"}],"output":{"name":"self"}}],[11,"with_alias","","Appends `AS {alias}` to the `query` field",1,{"inputs":[{"name":"subquery"},{"name":"str"}],"output":{"name":"self"}}],[0,"select","lithium","Keeps `SELECT` related stuff.",null,null],[3,"Select","lithium::select","Represents `SELECT` query.",null,null],[0,"select_type","","",null,null],[4,"SelectType","lithium::select::select_type","",null,null],[13,"All","","",5,null],[13,"Specific","","",5,null],[11,"eq","","",5,{"inputs":[{"name":"selecttype"},{"name":"selecttype"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"selecttype"},{"name":"selecttype"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"selecttype"}],"output":{"name":"selecttype"}}],[11,"to_sql","","",5,{"inputs":[{"name":"selecttype"}],"output":{"name":"string"}}],[0,"distinct","lithium::select","",null,null],[4,"DistinctType","lithium::select::distinct","",null,null],[13,"Empty","","",6,null],[13,"Simple","","",6,null],[13,"Extended","","",6,null],[11,"eq","","",6,{"inputs":[{"name":"distincttype"},{"name":"distincttype"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"distincttype"},{"name":"distincttype"}],"output":{"name":"bool"}}],[11,"clone","","",6,{"inputs":[{"name":"distincttype"}],"output":{"name":"distincttype"}}],[0,"join","lithium::select","",null,null],[3,"Join","lithium::select::join","",null,null],[12,"join_type","","",7,null],[12,"target","","",7,null],[12,"clause","","",7,null],[4,"JoinType","","",null,null],[13,"Inner","","",8,null],[13,"Left","","",8,null],[13,"Right","","",8,null],[13,"Outer","","",8,null],[11,"eq","","",8,{"inputs":[{"name":"jointype"},{"name":"jointype"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"jointype"},{"name":"jointype"}],"output":{"name":"bool"}}],[11,"clone","","",8,{"inputs":[{"name":"jointype"}],"output":{"name":"jointype"}}],[11,"to_sql","","",8,{"inputs":[{"name":"jointype"}],"output":{"name":"str"}}],[11,"eq","","",7,{"inputs":[{"name":"join"},{"name":"join"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"join"},{"name":"join"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"join"}],"output":{"name":"join"}}],[11,"to_sql","","",7,{"inputs":[{"name":"join"}],"output":{"name":"string"}}],[0,"order_by","lithium::select","",null,null],[3,"OrderBy","lithium::select::order_by","",null,null],[12,"ordering","","",9,null],[12,"order_by","","",9,null],[4,"Ordering","","",null,null],[13,"Ascending","","",10,null],[13,"Descending","","",10,null],[11,"eq","","",10,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",10,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"to_sql","","",10,{"inputs":[{"name":"ordering"}],"output":{"name":"str"}}],[11,"eq","","",9,{"inputs":[{"name":"orderby"},{"name":"orderby"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"orderby"},{"name":"orderby"}],"output":{"name":"bool"}}],[11,"clone","","",9,{"inputs":[{"name":"orderby"}],"output":{"name":"orderby"}}],[11,"to_sql","","",9,{"inputs":[{"name":"orderby"}],"output":{"name":"string"}}],[0,"limit","lithium::select","",null,null],[4,"LimitType","lithium::select::limit","",null,null],[13,"Empty","","",11,null],[13,"Specified","","",11,null],[11,"eq","","",11,{"inputs":[{"name":"limittype"},{"name":"limittype"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"limittype"},{"name":"limittype"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"limittype"}],"output":{"name":"limittype"}}],[0,"offset","lithium::select","",null,null],[4,"OffsetType","lithium::select::offset","",null,null],[13,"Empty","","",12,null],[13,"Specified","","",12,null],[11,"eq","","",12,{"inputs":[{"name":"offsettype"},{"name":"offsettype"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"offsettype"},{"name":"offsettype"}],"output":{"name":"bool"}}],[11,"clone","","",12,{"inputs":[{"name":"offsettype"}],"output":{"name":"offsettype"}}],[0,"for_cl","lithium::select","",null,null],[3,"For","lithium::select::for_cl","",null,null],[12,"mode","","",13,null],[12,"tables","","",13,null],[12,"nowait","","",13,null],[4,"ForMode","","",null,null],[13,"Update","","",14,null],[13,"Share","","",14,null],[4,"ForType","","",null,null],[13,"Empty","","",15,null],[13,"Specified","","",15,null],[11,"eq","","",14,{"inputs":[{"name":"formode"},{"name":"formode"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"formode"},{"name":"formode"}],"output":{"name":"bool"}}],[11,"clone","","",14,{"inputs":[{"name":"formode"}],"output":{"name":"formode"}}],[11,"eq","","",13,{"inputs":[{"name":"for"},{"name":"for"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"for"},{"name":"for"}],"output":{"name":"bool"}}],[11,"clone","","",13,{"inputs":[{"name":"for"}],"output":{"name":"for"}}],[11,"new","","",13,{"inputs":[{"name":"for"},{"name":"formode"}],"output":{"name":"self"}}],[11,"update","","",13,{"inputs":[{"name":"for"}],"output":{"name":"self"}}],[11,"share","","",13,{"inputs":[{"name":"for"}],"output":{"name":"self"}}],[11,"table","","",13,{"inputs":[{"name":"for"},{"name":"t"}],"output":{"name":"self"}}],[11,"nowait","","",13,{"inputs":[{"name":"for"}],"output":{"name":"self"}}],[11,"to_sql","","",13,{"inputs":[{"name":"for"}],"output":{"name":"string"}}],[11,"eq","","",15,{"inputs":[{"name":"fortype"},{"name":"fortype"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"fortype"},{"name":"fortype"}],"output":{"name":"bool"}}],[11,"clone","","",15,{"inputs":[{"name":"fortype"}],"output":{"name":"fortype"}}],[0,"union","lithium::select","",null,null],[3,"Union","lithium::select::union","",null,null],[4,"UnionMode","","",null,null],[13,"Simple","","",16,null],[13,"All","","",16,null],[11,"new","","Creates `Union` instance.",17,{"inputs":[{"name":"union"},{"name":"unionmode"},{"name":"l"},{"name":"r"}],"output":{"name":"self"}}],[11,"to_sql","","",17,{"inputs":[{"name":"union"}],"output":{"name":"string"}}],[11,"eq","lithium::select","",18,{"inputs":[{"name":"select"},{"name":"select"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"select"},{"name":"select"}],"output":{"name":"bool"}}],[11,"clone","","",18,{"inputs":[{"name":"select"}],"output":{"name":"select"}}],[11,"from","","Method to start with.",18,{"inputs":[{"name":"select"},{"name":"t"}],"output":{"name":"self"}}],[11,"select_all","","Specifies `SELECT` clause. Will result in `SELECT * ...` (which is a default behaviour).",18,{"inputs":[{"name":"select"}],"output":{"name":"self"}}],[11,"columns","","This method is used to specify desired `SELECT` columns.\nIt can receive either `&str` or `&[&str]`",18,{"inputs":[{"name":"select"},{"name":"t"}],"output":{"name":"self"}}],[11,"distinct","","Specifies `DISTINCT` clause. Will result in `SELECT DISTINCT ...`",18,{"inputs":[{"name":"select"}],"output":{"name":"self"}}],[11,"distinct_on","","Will result in `SELECT DISTINCT ON (...) ...`",18,{"inputs":[{"name":"select"},{"name":"t"}],"output":{"name":"self"}}],[11,"remove_distinct","","Removes `DISTINCT` clause.",18,{"inputs":[{"name":"select"}],"output":{"name":"self"}}],[11,"join","","Specifies `INNER JOIN`. Could receive a subquery as `target`.",18,{"inputs":[{"name":"select"},{"name":"t"},{"name":"str"}],"output":{"name":"self"}}],[11,"left_join","","",18,{"inputs":[{"name":"select"},{"name":"t"},{"name":"str"}],"output":{"name":"self"}}],[11,"right_join","","",18,{"inputs":[{"name":"select"},{"name":"t"},{"name":"str"}],"output":{"name":"self"}}],[11,"outer_join","","",18,{"inputs":[{"name":"select"},{"name":"t"},{"name":"str"}],"output":{"name":"self"}}],[11,"group_by","","Specifies `GROUP BY` clause.\nThis method can receive either `&str` or `&[&str]`",18,{"inputs":[{"name":"select"},{"name":"t"}],"output":{"name":"self"}}],[11,"order_by","","Specifies `ORDER BY` clause.",18,{"inputs":[{"name":"select"},{"name":"str"},{"name":"ordering"}],"output":{"name":"self"}}],[11,"filter","","Specifies `WHERE` clause.",18,{"inputs":[{"name":"select"},{"name":"t"}],"output":{"name":"self"}}],[11,"having","","Specifies `HAVING` clause. Has the same API and usage as `filter`.",18,{"inputs":[{"name":"select"},{"name":"t"}],"output":{"name":"self"}}],[11,"limit","","Specifies `LIMIT` clause.",18,{"inputs":[{"name":"select"},{"name":"str"}],"output":{"name":"self"}}],[11,"remove_limit","","Removes `LIMIT` clause.",18,{"inputs":[{"name":"select"}],"output":{"name":"self"}}],[11,"offset","","Specifies `OFFSET` clause.",18,{"inputs":[{"name":"select"},{"name":"str"}],"output":{"name":"self"}}],[11,"remove_offset","","Removes `OFFSET` clause.",18,{"inputs":[{"name":"select"}],"output":{"name":"self"}}],[11,"for_","","Specifies `FOR` clause.",18,{"inputs":[{"name":"select"},{"name":"for"}],"output":{"name":"self"}}],[11,"remove_for","","Removes `FOR` clause.",18,{"inputs":[{"name":"select"}],"output":{"name":"self"}}],[11,"as_subquery","","Returns an instance of `Subquery` with generated SQL inside.",18,{"inputs":[{"name":"select"}],"output":{"name":"subquery"}}],[11,"to_sql","","",18,{"inputs":[{"name":"select"}],"output":{"name":"string"}}],[0,"where_cl","lithium","Keeps `WHERE` related stuff.",null,null],[3,"Where","lithium::where_cl","Represents `WHERE` clause which is widely used in different queries.",null,null],[12,"operator","","Operator which will be used to join expressions",0,null],[4,"Operator","","",null,null],[13,"And","","",19,null],[13,"Or","","",19,null],[4,"WhereType","","",null,null],[13,"Simple","","",20,null],[13,"Extended","","",20,null],[8,"IntoWhereType","","",null,null],[10,"into_where_type","","",21,{"inputs":[{"name":"intowheretype"}],"output":{"name":"wheretype"}}],[11,"eq","","",19,{"inputs":[{"name":"operator"},{"name":"operator"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"operator"},{"name":"operator"}],"output":{"name":"bool"}}],[11,"clone","","",19,{"inputs":[{"name":"operator"}],"output":{"name":"operator"}}],[11,"to_sql","","",19,{"inputs":[{"name":"operator"}],"output":{"name":"str"}}],[11,"eq","","",20,{"inputs":[{"name":"wheretype"},{"name":"wheretype"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"wheretype"},{"name":"wheretype"}],"output":{"name":"bool"}}],[11,"clone","","",20,{"inputs":[{"name":"wheretype"}],"output":{"name":"wheretype"}}],[11,"eq","","",0,{"inputs":[{"name":"where"},{"name":"where"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"where"},{"name":"where"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"where"}],"output":{"name":"where"}}],[11,"new","","Method to start with.",0,{"inputs":[{"name":"where"},{"name":"operator"}],"output":{"name":"self"}}],[11,"with_and","","Just an alias for `new` with pre-defined `AND` operator.",0,{"inputs":[{"name":"where"}],"output":{"name":"self"}}],[11,"with_or","","Just an alias for `new` with pre-defined `OR` operator.",0,{"inputs":[{"name":"where"}],"output":{"name":"self"}}],[11,"expr","","Specifies clause. Can receive either `&str` or `Where`.",0,{"inputs":[{"name":"where"},{"name":"t"}],"output":{"name":"self"}}],[11,"into_where_type","","",0,{"inputs":[{"name":"where"}],"output":{"name":"wheretype"}}],[11,"to_sql","","",20,{"inputs":[{"name":"wheretype"}],"output":{"name":"string"}}],[11,"to_sql","","",0,{"inputs":[{"name":"where"}],"output":{"name":"string"}}],[0,"update","lithium","Keeps `UPDATE` related stuff.",null,null],[3,"Update","lithium::update","Represents `UPDATE` query",null,null],[4,"FromType","","",null,null],[13,"Empty","","",22,null],[13,"Specified","","",22,null],[4,"Returning","","",null,null],[13,"Empty","","",23,null],[13,"All","","",23,null],[13,"Specified","","",23,null],[11,"eq","","",22,{"inputs":[{"name":"fromtype"},{"name":"fromtype"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"fromtype"},{"name":"fromtype"}],"output":{"name":"bool"}}],[11,"clone","","",22,{"inputs":[{"name":"fromtype"}],"output":{"name":"fromtype"}}],[11,"eq","","",23,{"inputs":[{"name":"returning"},{"name":"returning"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"returning"},{"name":"returning"}],"output":{"name":"bool"}}],[11,"clone","","",23,{"inputs":[{"name":"returning"}],"output":{"name":"returning"}}],[11,"eq","","",24,{"inputs":[{"name":"update"},{"name":"update"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"update"},{"name":"update"}],"output":{"name":"bool"}}],[11,"clone","","",24,{"inputs":[{"name":"update"}],"output":{"name":"update"}}],[11,"new","","Method to start with.",24,{"inputs":[{"name":"update"},{"name":"str"}],"output":{"name":"self"}}],[11,"set","","Specifies update expressions.",24,{"inputs":[{"name":"update"},{"name":"t"}],"output":{"name":"self"}}],[11,"from","","Specifies `FROM` clause. Can take either `&str` or `&Subquery`.",24,{"inputs":[{"name":"update"},{"name":"t"}],"output":{"name":"self"}}],[11,"remove_from","","Removes `FROM` clause.",24,{"inputs":[{"name":"update"}],"output":{"name":"self"}}],[11,"filter","","Specifies `WHERE` clause. Can take either `&str` or `Where`.",24,{"inputs":[{"name":"update"},{"name":"t"}],"output":{"name":"self"}}],[11,"returning_all","","Specifies `RETURNING` clause. Will result in `UPDATE ... RETURNING *`",24,{"inputs":[{"name":"update"}],"output":{"name":"self"}}],[11,"returning","","Specifies `RETURNING` clause.",24,{"inputs":[{"name":"update"},{"name":"t"}],"output":{"name":"self"}}],[11,"empty_returning","","Remooves `RETURNING` clause",24,{"inputs":[{"name":"update"}],"output":{"name":"self"}}],[11,"to_sql","","Generates SQL.",24,{"inputs":[{"name":"update"}],"output":{"name":"string"}}],[0,"insert","lithium","Keeps `INSERT` related stuff.",null,null],[3,"Insert","lithium::insert","Represents `INSERT` query.",null,null],[11,"eq","","",25,{"inputs":[{"name":"insert"},{"name":"insert"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"insert"},{"name":"insert"}],"output":{"name":"bool"}}],[11,"clone","","",25,{"inputs":[{"name":"insert"}],"output":{"name":"insert"}}],[11,"into","","Method to start with.",25,{"inputs":[{"name":"insert"},{"name":"str"}],"output":{"name":"self"}}],[11,"columns","","Specifies columns for `INSERT`.",25,{"inputs":[{"name":"insert"},{"name":"t"}],"output":{"name":"self"}}],[11,"values","","Specifies `INSERT` values. Sorry for receiving `Vec` here - we're going to find a better way\nfor this.",25,{"inputs":[{"name":"insert"},{"name":"vec"}],"output":{"name":"self"}}],[11,"query","","Specifies `SELECT` as `INSERT` value. Results in `INSERT INTO ... SELECT`",25,{"inputs":[{"name":"insert"},{"name":"select"}],"output":{"name":"self"}}],[11,"returning_all","","Specifies `RETURNING` clause. WIll result in `RETURNING *`",25,{"inputs":[{"name":"insert"}],"output":{"name":"self"}}],[11,"returning","","Specifies columns for `RETURNING` clause.",25,{"inputs":[{"name":"insert"},{"name":"t"}],"output":{"name":"self"}}],[11,"remove_returning","","Removes `RETURNING` clause.",25,{"inputs":[{"name":"insert"}],"output":{"name":"self"}}],[11,"to_sql","","Generates SQL.",25,{"inputs":[{"name":"insert"}],"output":{"name":"string"}}],[8,"ToSQL","lithium","",null,null],[10,"to_sql","","",2,{"inputs":[{"name":"tosql"}],"output":{"name":"string"}}],[8,"AsStr","","Is used to build up methods which can receive either `&str` or `&Subquery`\nin a convenient way. You can find examples in some of `Select`'s methods.",null,null],[10,"as_str","","",3,{"inputs":[{"name":"asstr"}],"output":{"name":"str"}}],[8,"Pusheable","","Is used to build up methods which can receive either `&str` or `&[&str; N]`\nin a convenient way. You can find examples in some of `Select`'s methods.",null,null],[10,"push_to","","",4,{"inputs":[{"name":"pusheable"},{"name":"vec"}],"output":null}]],"paths":[[3,"Where"],[3,"Subquery"],[8,"ToSQL"],[8,"AsStr"],[8,"Pusheable"],[4,"SelectType"],[4,"DistinctType"],[3,"Join"],[4,"JoinType"],[3,"OrderBy"],[4,"Ordering"],[4,"LimitType"],[4,"OffsetType"],[3,"For"],[4,"ForMode"],[4,"ForType"],[4,"UnionMode"],[3,"Union"],[3,"Select"],[4,"Operator"],[4,"WhereType"],[8,"IntoWhereType"],[4,"FromType"],[4,"Returning"],[3,"Update"],[3,"Insert"]]};
initSearch(searchIndex);
